|sender_control
clk => sender:sdr.clk
clk => sender_memory:smem.clk
clk => state~8.CLK
clk => state~0.CLK
clk => state~1.CLK
clk => state~2.CLK
clk => state~3.CLK
clk => state~4.CLK
clk => state~5.CLK
clk => state~6.CLK
clk => state~7.CLK
clk => counter~0.CLK
clk => counter~1.CLK
clk => counter~2.CLK
clk => counter~3.CLK
Reset => sender:sdr.Reset
Reset => state~8.PRESET
Reset => state~0.ACLR
Reset => state~1.ACLR
Reset => state~2.ACLR
Reset => state~3.ACLR
Reset => state~4.ACLR
Reset => state~5.ACLR
Reset => state~6.ACLR
Reset => state~7.ACLR
Reset => counter~0.ACLR
Reset => counter~1.ACLR
Reset => counter~2.ACLR
Reset => counter~3.ACLR
Ack => sender:sdr.Ack
data[0] => memDataIn[0].DATAIN
data[1] => memDataIn[1].DATAIN
data[2] => memDataIn[2].DATAIN
data[3] => memDataIn[3].DATAIN
data[4] => memDataIn[4].DATAIN
data[5] => memDataIn[5].DATAIN
data[6] => memDataIn[6].DATAIN
data[7] => memDataIn[7].DATAIN
data[8] => memDataIn[8].DATAIN
data[9] => memDataIn[9].DATAIN
data[10] => memDataIn[10].DATAIN
data[11] => memDataIn[11].DATAIN
data[12] => memDataIn[12].DATAIN
data[13] => memDataIn[13].DATAIN
data[14] => memDataIn[14].DATAIN
data[15] => memDataIn[15].DATAIN
write => next_counter.OUTPUTSELECT
write => next_counter.OUTPUTSELECT
write => next_counter.OUTPUTSELECT
write => next_counter.OUTPUTSELECT
write => next_state.OUTPUTSELECT
write => next_state.OUTPUTSELECT
write => memDataIn[1].IN1
write => Address[0].OUTPUTSELECT
write => Address[0].IN0
write => Address[1].OUTPUTSELECT
write => Address[2].OUTPUTSELECT
write => Address[3].OUTPUTSELECT
write => next_state.WRITE.DATAB
start => next_counter.OUTPUTSELECT
start => next_counter.OUTPUTSELECT
start => next_counter.OUTPUTSELECT
start => next_counter.OUTPUTSELECT
start => Address[0].IN1
start => Selector8.IN3
start => next_state.DATAA
start => next_state.DATAA
Request <= sender:sdr.Request
sdrDataOut[0] <= sender:sdr.DataOut[0]
sdrDataOut[1] <= sender:sdr.DataOut[1]
sdrDataOut[2] <= sender:sdr.DataOut[2]
sdrDataOut[3] <= sender:sdr.DataOut[3]
sdrDataOut[4] <= sender:sdr.DataOut[4]
sdrDataOut[5] <= sender:sdr.DataOut[5]
sdrDataOut[6] <= sender:sdr.DataOut[6]
sdrDataOut[7] <= sender:sdr.DataOut[7]
sdrDataOut[8] <= sender:sdr.DataOut[8]
sdrDataOut[9] <= sender:sdr.DataOut[9]
sdrDataOut[10] <= sender:sdr.DataOut[10]
sdrDataOut[11] <= sender:sdr.DataOut[11]
sdrDataOut[12] <= sender:sdr.DataOut[12]
sdrDataOut[13] <= sender:sdr.DataOut[13]
sdrDataOut[14] <= sender:sdr.DataOut[14]
sdrDataOut[15] <= sender:sdr.DataOut[15]


|sender_control|sender:sdr
clk => state~5.CLK
clk => state~0.CLK
clk => state~1.CLK
clk => state~2.CLK
clk => state~3.CLK
clk => state~4.CLK
clk => counter~0.CLK
clk => counter~1.CLK
clk => counter~2.CLK
clk => counter~3.CLK
Reset => state~5.PRESET
Reset => state~0.ACLR
Reset => state~1.ACLR
Reset => state~2.ACLR
Reset => state~3.ACLR
Reset => state~4.ACLR
Reset => counter~0.ACLR
Reset => counter~1.ACLR
Reset => counter~2.ACLR
Reset => counter~3.ACLR
Transmit => next_state.DATAA
Transmit => next_state.TRANSMIT_SIGNAL_2.DATAB
Transmit => Selector1.IN4
Transmit => next_state.DATAA
Transmit => Selector0.IN2
Transmit => Selector0.IN3
DataIn[0] => DataOut[0]$latch.DATAIN
DataIn[1] => DataOut[1]$latch.DATAIN
DataIn[2] => DataOut[2]$latch.DATAIN
DataIn[3] => DataOut[3]$latch.DATAIN
DataIn[4] => DataOut[4]$latch.DATAIN
DataIn[5] => DataOut[5]$latch.DATAIN
DataIn[6] => DataOut[6]$latch.DATAIN
DataIn[7] => DataOut[7]$latch.DATAIN
DataIn[8] => DataOut[8]$latch.DATAIN
DataIn[9] => DataOut[9]$latch.DATAIN
DataIn[10] => DataOut[10]$latch.DATAIN
DataIn[11] => DataOut[11]$latch.DATAIN
DataIn[12] => DataOut[12]$latch.DATAIN
DataIn[13] => DataOut[13]$latch.DATAIN
DataIn[14] => DataOut[14]$latch.DATAIN
DataIn[15] => DataOut[15]$latch.DATAIN
Ack => next_state.ACKNOWLEDGE.DATAB
Ack => Selector1.IN2
Ready <= Ready$latch.DB_MAX_OUTPUT_PORT_TYPE
Request <= Request$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[0] <= DataOut[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[1] <= DataOut[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[2] <= DataOut[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[3] <= DataOut[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[4] <= DataOut[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[5] <= DataOut[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[6] <= DataOut[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[7] <= DataOut[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[8] <= DataOut[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[9] <= DataOut[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[10] <= DataOut[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[11] <= DataOut[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[12] <= DataOut[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[13] <= DataOut[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[14] <= DataOut[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[15] <= DataOut[15]$latch.DB_MAX_OUTPUT_PORT_TYPE


|sender_control|sender_memory:smem
clk => state~1.DATAIN
DataIn[0] => mem.DATAIN
DataIn[1] => mem.DATAIN1
DataIn[2] => mem.DATAIN2
DataIn[3] => mem.DATAIN3
DataIn[4] => mem.DATAIN4
DataIn[5] => mem.DATAIN5
DataIn[6] => mem.DATAIN6
DataIn[7] => mem.DATAIN7
DataIn[8] => mem.DATAIN8
DataIn[9] => mem.DATAIN9
DataIn[10] => mem.DATAIN10
DataIn[11] => mem.DATAIN11
DataIn[12] => mem.DATAIN12
DataIn[13] => mem.DATAIN13
DataIn[14] => mem.DATAIN14
DataIn[15] => mem.DATAIN15
Address[0] => mem.WADDR
Address[0] => mem.RADDR
Address[1] => mem.WADDR1
Address[1] => mem.RADDR1
Address[2] => mem.WADDR2
Address[2] => mem.RADDR2
Address[3] => mem.WADDR3
Address[3] => mem.RADDR3
ReadEnable => next_state.OUTPUTSELECT
ReadEnable => next_state.OUTPUTSELECT
ReadEnable => state.READ.DATAIN
ReadEnable => Selector0.IN1
WriteEnable => next_state.DATAA
WriteEnable => next_state.DATAA
DataOut[0] <= DataOut[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[1] <= DataOut[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[2] <= DataOut[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[3] <= DataOut[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[4] <= DataOut[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[5] <= DataOut[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[6] <= DataOut[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[7] <= DataOut[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[8] <= DataOut[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[9] <= DataOut[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[10] <= DataOut[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[11] <= DataOut[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[12] <= DataOut[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[13] <= DataOut[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[14] <= DataOut[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
DataOut[15] <= DataOut[15]$latch.DB_MAX_OUTPUT_PORT_TYPE


